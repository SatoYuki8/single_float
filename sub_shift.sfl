/*************************
exp_a - exp_b -> shit_amount
frac_b >> shift_amont
**************************/

circuit sub_shift{
    input exp_a<8>;
    input exp_b<8>;
    input frac_b<26>;
    output shifted_frac_b<26>;
    output sticky;
    instrin do;

    sel_v exp_sub<8>;
    sel_v tmp_shift<62>;

    instruct do par{
	exp_sub = exp_a + (^exp_b + 0b00000001);
	alt {
	    (exp_sub == 0b00000000): par{
		shifted_frac_b = frac_b;
		sticky = 0b0;
	    }
	    else: par{
		shifted_frac_b = frac_b >> exp_sub;
		tmp_shift = (frac_b || 0x000000000) >> exp_sub;
		sticky = /|(tmp_shift<35:0>);
	    }
	}
    }
}
